#See https://aka.ms/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.
#when we ask docker to extract img for our project it will search for docker file
#1st part uild the application
FROM mcr.microsoft.com/dotnet/aspnet:5.0 AS base #base lib. in whichever language project is used
WORKDIR /app  #indicates folder under which the container will copy the files of our project
EXPOSE 80

FROM mcr.microsoft.com/dotnet/sdk:5.0 AS build
WORKDIR /src #following copy commands used to copy the files from local file system to docker image and restore the c# project file
COPY ["Services/Ordering/Ordering.API/Ordering.API.csproj", "Services/Ordering/Ordering.API/"]
COPY ["Services/Ordering/Ordering.Application/Ordering.Application.csproj", "Services/Ordering/Ordering.Application/"]
COPY ["Services/Ordering/Ordering.Domain/Ordering.Domain.csproj", "Services/Ordering/Ordering.Domain/"]
COPY ["Services/Ordering/Ordering.Infrastructure/Ordering.Infrastructure.csproj", "Services/Ordering/Ordering.Infrastructure/"]
RUN dotnet restore "Services/Ordering/Ordering.API/Ordering.API.csproj"
COPY . .
WORKDIR "/src/Services/Ordering/Ordering.API"
RUN dotnet build "Ordering.API.csproj" -c Release -o /app/build  #build the project

#2nd part un the application
FROM build AS publish
RUN dotnet publish "Ordering.API.csproj" -c Release -o /app/publish   #publish the project

FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "Ordering.API.dll"] #this indicates 1st command run after container is up
